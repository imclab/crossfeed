2013/04/11 19:16:47 geoff

    * The inevitable minor fixes to compile in Ubuntu
    * Changed the unix build tools to use a sub-directory build/ which 
      is included in .gitignore, so git will ignroe all in this folder

2013/04/04 15:00:05 geoff

    * Add an XML pilot list feed on URL 'GET /flights.xml HTTP...'. The is 
      the SAME data as the json feed, except in XML format complinant with
      mpmap from http://mpmap01.flightgear.org/fg_server_xml.cgi?mpserver12.flightgear.org:5001
      however roll and pitch have been removed, and spd_kt="123" (TAS) added. Also 
      spd_kt, alt, heading are given as rounded up integers only. This is updated each second.
    * To conform to this URL style the json feed is on 'GET /flights.json HTTP...", but 
      also remains on /data.
    * Methods other than GET are now replied to with 405 Method Not Allowed, adding 
      "Allow : GET\r\n" to the reply if GET other than /flights.json, /flights.xml, /data, /info or /
    * The MAX_PACKET_SIZE set to 1200 (from 1024) to agree with FG multiplayermgr.cxx 
      which has had this value since before Sept 2008, the then CVS source.
    * A version file added containing the version string which is read in by the CMakeLists.txt
      as is now done in SG/FG. CMakeLists.txt will abort if NO version file found.
    * Enhanced test_pg, especially test 2, to output 'CLOSED' flights, and each related positions
      entry for each FID. Points out a considerable number of somewhat 'useless' records, where there
      are no position records, or just a few, or the aircraft did not really move. Writes a big 
      json file of the results of the queries, with timing...
    * Updated test_http to respond to the same URI as cf_client, passing back canned data for 
      testing.
    * Version bumped to 1.0.28


2013/02/05 12:09:38

    * Check the creation of a json file, if enabled, and abort if unable
      to create a blank file.
    * More fixes to ensure a file name is returned by get_..., else pointer to 
      'none'.
    * Small fix to ensure tracker log disabled by default.
    * In unix, add app exit time UTC if daemon and by signal.
    * Correct nanosleep converting seconds to milliseconds in windows port of
      this function.
    * Bumped AGE to 26.

2013/01/27 11:37:43

    * Change the cmake project name to 'crossfeed'. Seems this
      does vrey little in unix, and only changes the MSVC solution 
      file name in windows.
    * Changed CMake option USE_GEOGRAPHIC_LIB to OFF by default, removing
      dependency to Geographic library needed only for test_pg2
    * Tested removing SimgearCore library dependence, but several code 
      fixes required to build with this OFF.
    * Bumped AGE to 26.

2013/01/25 14:05:13

    * Remove pwd output from log file, and tidy up several 
      log messages during command line parsing.
    * For unix add #define stricmp strcasecmp
    * Minor addjustment in fip.h. Change if (line[0] == NULL) to
      if (line[0] == 0), to avoid gcc warning. There remains 
      a few gcc compiler warnings using -Wall, but do not seem 
      to effect running. Put a post on Google code, feather-ini-parser,
      to maybe even remove these.
      
2013/01/24 16:54:38

    * Implement new feature to read a configuration INI 
      file with command -c file.ini. Added new files -
      cf_ini.cxx/hxx. INI parsing is using FIP (feather-ini-parsing)
      from : https://code.google.com/p/feather-ini-parser/
      Code license GNU GPL v2, here included as fip.h
    * Added an example.ini to show the sections and key values
      available. In the main, it matches all that can be done 
      on the command line.
    * A number of other minor changes to fully accomodate the 
      use of this INI file - cf_client.cxx/hxx, cf_discards.cxx,
      cf_misc.cxx, sprtf.cxx/hxx
    * Prior to scanning the command line, seek and load 
      a $HOME/.crossfeedrc INI file to set defaults and 
      be able to run without any command line.
    * Updated README.txt to reflect current version.
    * Bumped AGE to 25.

2013/01/22 00:00:00

    * Main README.txt update
    * Correct name of db_setup README.sql to txt
    * Add some 'test' pages for crossfeed, etc
    * Bring crossfeed uptodate with fgx-cf
    
2013/01/05 14:27:55

    * Due to a ' character in the callsign broke the sql statement,
      restored some callsign modification. Now accept ALL alpha-numeric 
      chars, plus '-' and '_'.
    * Bumped AGE to 24.

2013/01/04 12:56:01

    * Allow '-D none' to DISABLE PostgreSQL tracker database.
    * Bumped AGE to 23.

2013/01/03 11:18:32

    * On database init, ensure all OPEN flights are CLOSED
    * Only install the primary app, cf_client
    * Bumped AGE to 22.

2012/12/30 15:26:01

    * Remove quotes from around json numbers
    * Add listen, http and telent addr/port to 'info' json
    * Add UI command to cf_feed.cxx
    * Bumped AGE to 21.

2012/12/29 13:17:11

    * Set default modifying callsign and aircraft to OFF.
    * Add cf_feed, to be able to feed raw packets to cf_client from a 
      raw packet log, without the need to run fgms.
    * Bumped AGE to 20.

2012/12/28 10:43:53

    * Due to temporary outage of fgx.ch server, establish a repo at 
      gitorious.org/fgtools to be able to devel in both linux and WIN32
    * Cut in http handling from test_http.cxx
    * Bumped AGE to 19.

2012/12/22 18:34:40

    * Add a URI of /info to get a json information string. At present 
      this contains minimal information, but can be easily extended 
      with all sorts of internal app information.
    * The bug using just a '/' persists, and a 404 is returned.
    * And the bug adding new fid for continuing flights persists, but 
      it has been reduced.
    * Added a -L secs to be able to set the flight timeout from the 
      command line.
    * Bumped AGE to 19.


2012/12/22 14:04:00

    * Revert to using select on HTTP interface, but this handling still
      needs some attention.
    * Chop example_EllipticFunction() from geod.cxx due to some 
      differences either in the GeographicLib header/library versions,
      or perhaps different gcc versions 4.4.5 2010 vs 4.6.3 2011.
    * Attempted bug fix. Due to too many new fid being created, change to using a new 
      structure variable 'last_seen', which is ALWAYS updated, no 
      matter what the actual packet dispostion is, for the judgement 
      as to whether a flight has expired.
    * Bumped AGE to 18.

2012/12/20 14:50:14

    * Add some functions to cf_misc.cxx/hxx
      char *Get_Current_GMT_Time_Stg() returns GMT time in 
      Www Mmm dd hh:mm:ss yyyy form, without any line endings.
      double get_seconds(); and char *get_seconds_stg( double secs );
      Get a 'timestamp' in seconds + nanoseconds, and return a 
      nicely formatted string repesenting elapsed time with units appended.
      class cf_String - offering a flexible buffer for Printf(), Appendf()
    * Added some thin postgresql and sqlite3 classes to offer a consistent
      API to those libraries. These are added to the CMakeLists.txt to 
      include them in the build. And add a test_pg2 app to 'test' the 
      postgresql interface.
    * Added src/cf_lib/win_strptime.cxx to provide timegm(struct tm *) and 
      strptime(char *, char *, struct tm*) services in Windows.
    * Added geod.cxx/hxx to library under USE_GEOGRAPHIC_LIB option, as a 
      possible replacement of some SimGear functions.
    * Added a test_http app, used to develop, improve and test the http interface 
      handling.
    * Fixed and changed behaviour of '/' URI to return an information json
      string.
    * Bumped AGE to 17.

2012/12/14 16:51:16

    * Enhance src/test_db.cxx to run some further postgresql database 
      tests, including adding and deleting records to/from the 'flights'
      and 'positions' tables of tracker_test db as established by the 
      create_db.sql script. Compiles and runs in both windows and Ubuntu.
    * Bumped AGE to 16.

2012/12/13 14:12:38

    * Commence to work with PostgreSQL database, on by default.
      Use find_package(PostgreSQL REQUIRED). Abort if NOT found.
    * Add a test_pg app, to do a connection test, query schema, 
      and search for table 'flights' and 'positions'.
    * Bumped AGE to 15.

2012/12/12 18:32:32

    * Disable json file output by default.
    * Allow '-s none' to disable SQL db output
    * Increased the verbosity on a number of log outputs.
    * Bumped AGE to 14.

2012/12/12 16:22:56

    * Start up the 'worker' thread with start_tracker_thread() to 
      handle the tracker packets.
    * Do the database 'init' befoere starting the threads, and 
      abort if either fail.
    * Add some 'thread' stats, output each 5 mins or so...
    * Bumped AGE to 13.


2012/12/11 19:10:44

    * Improve SQLite3 'busy' handling, using nanosleep() to try to 
      wait for not busy, before recording an error which equals a 
      lost message. Allow up to 10 such errors before aborting the 
      application. Of course this is in the thread so does not effect 
      the main thread operation.
    * Moved the nanosleep windows port into cf_misc.cxx, that is into 
      the cf_lib.
    * Set an 'init' json output, but not yet available via http.
    * Bumped AGE to 12.

2012/12/09 16:27:55

    * Added 'tracker' to SQLite3 database, under CMake option
      -DUSE_SQLITE3_DATABASE:BOOL=TRUE, default is OFF, through new 
      modules src/cf_sqlite3.cxx/hxx.
    * Above adds pthread dependency to this crossfeed project. The 
      tracker messages are added to a vector, by acquiring a mutex, adding 
      the message, then triggering a signal, and the tracker thread 
      waits on that condition to feed of that message vector. The vector 
      contains as allocated structure, which is freed by the tracker 
      thread after it has added the transaction to the database.
    * This addition was started in the 'tracker' branch.
    * Bumped AGE to 11


2012/11/27 12:51:29

    * Fix setting of the unique flight id, now produced by a simple 
      get_epoch_id() = epoch second * 1000 + a counter to make unique.
    * Added a get_epoch_usecs() which returns the gettimeofday()
      total usecs as a uint64_t.
    * Some work on calculating total distance travelled, in NM, for 
      each pilot, but not yet exposed, except as an output when verbosity
      increased to 2 or more.
    * Bumped AGE to 10

2012/11/26 11:45:33

    * Added a unique 'flight id', using gettimeofday( &tv, 0 ), using
      uitn64_t id = (tv.tv_sec * 1000000) + tv.tv_usec; These services
      int set_epoch_id_stg( char *cp, uint64_t id );
      uint64_t get_epoch_id();
      char *get_epoch_id_stg(uint64_t id);
      were added tp cf_misc.cxx and exposed in cf_misc.hxx
      This adds a "fid":"18446744072826695760" to the json string.
    * Added a SGTimeStamp::sleepForMSec(100); in the main data 
      receive loop, if there has NOT been any reception of fgms packets 
      on the main port. This needs libSimGearCore so turning off the 
      USE_SIMGEAR macro is now broken. Perhaps this flag should be removed.
    * Added a int Get_JSON_Expired( char **pbuf ); to get the EXPIRED pilots 
      remaining in the main vector. TODO - Garbage Collection to removed 
      expired pilots from the vector.
    * Bumped AGE to 9

2012/11/21 17:38:47

    * Changed json string. Put ALL keys: in double inverted 
      commas, "success":true. and removed "server", and all spaces 
      in the line.
    * Return json if the request is '/' OR '/data'
    * Set the select timeout to 10 seconds, as it should have 
      been. Increased stats to each 5 minutes only.
    * Bumped AGE to 8

2012/11/08 17:07

    * cf_client - Some fixes in the HTTP handling, and much more
      debug output if -v9
      Now after select(), if 'send' is valid but not 
      'recv' do a nanosleep() for 100000000 nanoseconds,
      1/10 of a second, and this seems to get 'recv'
      valid.
    * Only output the print_pilot() if verbosity is 2 or 
      greater. Verbosity defaults to 1.
    * Reduce output of jason file written to once each
      300 seconds.
    * Bumped AGE to 6

2012/11/07 19:53

    * Added setting of Telnet and HTTP IP address using 
      new -A addr option. Defaults is 127.0.0.1
    * Some changes in the HTTP handling. Seems IE can 
      delay many ms before sending the GET text string
      If less that 50 cycles, re-do the select until a 
      receive is found. This is not yet ideal, but works...
      This tends to suggest HTTP handling should be on a thread 
      that is prepared to wait for 'slow' browser action.
    * Added binary installation to /usr/sbin in unix, and 
      ${SRC_DIR}/../3rdParty/bin in windows
    * Bumped AGE to 5
    
10-30-2012 13:52

	* Reduce output by reversing the sense of the logs.
	  That is they are OFF unless requested.
	* Reduce the overall log file output using the SPRTF()
	  macro.

10-16-2012 00:00

	* Project commenced using bits and pieces from fgms and
	  fg io modules.

# eof

